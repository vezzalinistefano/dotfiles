#
# ~/.config/zsh/zshrc
#
# zsh shell configuration file

# Check existance of a command
_check() {
	command -v "$1" > /dev/null
}

# General settings
# -----------------------------------------------------------------------------
## Include personal scripts and binaries
if [ -d "$HOME/.local/bin" ] ; then
	export PATH=$PATH:"$HOME/.local/bin"
fi

if [ -d "$HOME/bin" ] ; then
	export PATH=$PATH:"$HOME/bin"
fi

if [ -d "$HOME/go" ] ; then
	export GOPATH=$HOME/go
	export PATH=$PATH:"$HOME/go/bin"
fi

if [ -d "$HOME/.dotnet/tools/csharp-ls" ] ; then
	export PATH=$PATH:"$HOME/.dotnet/tools/csharp-ls"
fi

export _JAVA_AWT_WM_NONREPARENTING=1

## Starship prompt
eval "$(starship init zsh)"

## Editor settings
if _check nvim; then
    export EDITOR="nvim"
	alias vimg="nvim +G +only"
else
    export EDITOR="vim"
fi

## History in cache directory:
HISTSIZE=10000000
SAVEHIST=10000000
HISTFILE=~/.cache/zsh/history

## Basic auto/tab complete:
autoload -Uz compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots) # Include hidden files.

export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh

# Aliases
# -----------------------------------------------------------------------------
## Pacman
if _check pacman; then
	alias pass="pacman -Ss" # search
	alias pasy="sudo pacman -Sy" # install
	alias par="sudo pacman -R" # remove
	alias pasyu="sudo pacman -Syu"

	# Fix sometime borken pacman installation
	alias pasyuk="sudo pacman -Sy archlinux-keyring"
fi
## apt
if _check apt; then
	### up(dating, grading), the -V shows version changes.
	alias au="sudo apt update"
	alias aug="sudo apt upgrade -V"
	alias auu="sudo apt update && sudo apt upgrade -V"

	### act on package targets
	alias ai="sudo apt install"
	alias air="sudo apt install --reinstall"
	alias ar="sudo apt remove -V"

	### act on the repos
	alias as="apt search"
	alias ash="apt show"

	### package handling
	alias aac="sudo apt autoclean"
	alias aar="sudo apt autoremove -V"
fi

if _check kubectl; then
	alias k="kubectl"

	# Tab completition for kubectl
	source <(kubectl completion zsh) 
fi

## Git commands
if _check git; then
    #export GIT_EDITOR="$EDITOR"

    ### add, commit
    alias gadd="git add -v"
    alias gaddi="git add --interactive"
    alias gcom="git commit"
    alias gcomm="git commit -m"

	# cloning
	alias gclone="git clone"

    ### logs
    alias glog="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"

    alias glo="git log --oneline"
    alias gsho="git show --oneline"
    alias gsh="git show"
    alias gsta="git status"
    alias gst="git status"

    ### branching
	alias gch='git checkout'
	alias gchb='git checkout -b'
	alias gbd='git branch -d'
	alias gbl='git branch --list'
	alias gpd='git push origin --delete'
	alias gmerg='git merge --edit --stat --no-ff'
	alias gmerge='git merge --edit --stat --no-ff'
fi

## Kubernetes
if _check kubectl; then
    alias kuaf="kubectl apply -f"
fi

## vim & neovim
if _check nvim; then
	alias vim='nvim'
	alias vi='nvim'
	alias v='nvim'
else
	alias vi='vim'
	alias v='v'
fi

## Flatpak commands
if _check flatpak; then
    alias fli="flatpak install" # must be followed by a source, e.g. fli flathub
	alias fliu="flatpak uninstall"
	alias flls="flatpak list --app --columns='desc,app,orig'"
	alias flu="flatpak update"
fi

## MPV
if _check mpv; then
	alias mpvna="mpv --no-audio"
	alias mpvnv="mpv --no-video"
	#alias mpvyt="mpv --ytdl-format=best --fs '$(xclip -o)'"
fi

## cd into the previous working directory by omitting `cd`.
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

## Safer default for cp, mv, rm.  These will print a verbose output of
## the operations.  If an existing file is affected, they will ask for
## confirmation.  This can make things a bit more cumbersome, but is a
## generally safer option.
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -Iv'

## color=auto some stuff
alias diff='diff --color=auto'

alias dir='dir --color=auto'
alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

## Make ls a bit more functional
alias ls='ls -pv --color=auto --group-directories-first'
alias lsa='ls -pvA --color=auto --group-directories-first'
alias lsl='ls -lhpv --color=auto --group-directories-first'
alias lsla='ls -lhpvA --color=auto --group-directories-first'

# Functions
# -----------------------------------------------------------------------------
## Colourise man pages
man() {
	env \
	LESS_TERMCAP_mb=$(tput bold; tput setaf 6) \
	LESS_TERMCAP_md=$(tput bold; tput setaf 6) \
	LESS_TERMCAP_me=$(tput sgr0) \
	LESS_TERMCAP_se=$(tput rmso; tput sgr0) \
	LESS_TERMCAP_ue=$(tput rmul; tput sgr0) \
	LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 4) \
	LESS_TERMCAP_mr=$(tput rev) \
	LESS_TERMCAP_mh=$(tput dim) \
	LESS_TERMCAP_ZN=$(tput ssubm) \
	LESS_TERMCAP_ZV=$(tput rsubm) \
	LESS_TERMCAP_ZO=$(tput ssupm) \
	LESS_TERMCAP_ZW=$(tput rsupm) \
		man "$@"
}

## Enter directory and list contents
cd() {
	if [ -n "$1" ]; then
		builtin cd "$@" && ls -pvA --color=auto --group-directories-first
	else
		builtin cd ~ && ls -pvA --color=auto --group-directories-first
	fi
}

bindkey -s ^f "tmux-sessionizer\n"
# Fix to ctrl+r in tmux
bindkey '^R' history-incremental-search-backward
# Added ctrl+p for good measure, since that was also broken
bindkey '^P' up-history

# PLUGINS

plugins=(ssh-agent)

if [ ! -d ~/.local/share/zsh/plugins/colorize ]; then 
	git clone --depth 1 https://github.com/zpm-zsh/colorize ~/.local/share/zsh/plugins/colorize
fi

# autosuggestions plugin
#source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
# zsh syntax highlighting
#source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#source ~/.local/share/zsh/plugins/colorize/colorize.plugin.zsh

export PATH=$PATH:/home/sv/.local/bin

# Azure CLI completition
autoload bashcompinit && bashcompinit
#source '/home/sv/.local/bin/azure-cli/az.completion'
